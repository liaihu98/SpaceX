{"ast":null,"code":"var _jsxFileName = \"/Users/liaihu/project/starlink/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport axios from \"axios\";\nimport SatSetting from \"./SatSetting\";\nimport SatelliteList from \"./SatelliteList\";\nimport WorldMap from \"./WorldMap\";\nimport { NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.showNearbySatellite = setting => {\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        latitude,\n        longitude,\n        elevation,\n        altitude\n      } = setting;\n      const url = `/api/${NEARBY_SATELLITE}/${latitude}/${longitude}/${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        isLoadingList: true\n      });\n      axios.get(url).then(response => {\n        console.log(response.data);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false\n        });\n      }).catch(error => {\n        console.log(\"err in fetch satellite -> \", error);\n      });\n    };\n\n    this.showMap = () => {\n      console.log(\"show on the map\");\n    };\n\n    this.state = {\n      satInfo: null,\n      isLoadingList: false\n    };\n  }\n\n  render() {\n    const {\n      satInfo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        className: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(SatSetting, {\n          onShow: this.showNearbySatellite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SatelliteList, {\n          satInfo: satInfo,\n          onShowMap: this.showMap,\n          isLoad: this.state.isLoadingList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 16,\n        className: \"right-side\",\n        children: /*#__PURE__*/_jsxDEV(WorldMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/liaihu/project/starlink/src/components/Main.js"],"names":["React","Component","Row","Col","axios","SatSetting","SatelliteList","WorldMap","NEARBY_SATELLITE","SAT_API_KEY","STARLINK_CATEGORY","Main","constructor","showNearbySatellite","setting","fetchSatellite","latitude","longitude","elevation","altitude","url","setState","isLoadingList","get","then","response","console","log","data","satInfo","catch","error","showMap","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,iBAAxC,QAAiE,cAAjE;;;AAEA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAC3BW,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,mBAPc,GAOSC,OAAD,IAAa;AACjC,WAAKC,cAAL,CAAoBD,OAApB;AACD,KATa;;AAAA,SAWdC,cAXc,GAWID,OAAD,IAAa;AAC5B,YAAM;AAAEE,QAAAA,QAAF;AAAYC,QAAAA,SAAZ;AAAuBC,QAAAA,SAAvB;AAAkCC,QAAAA;AAAlC,UAA+CL,OAArD;AACA,YAAMM,GAAG,GAAI,QAAOZ,gBAAiB,IAAGQ,QAAS,IAAGC,SAAU,IAAGC,SAAU,IAAGC,QAAS,IAAGT,iBAAkB,YAAWD,WAAY,EAAnI;AAEA,WAAKY,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAE;AADH,OAAd;AAIAlB,MAAAA,KAAK,CACFmB,GADH,CACOH,GADP,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,aAAKP,QAAL,CAAc;AACZQ,UAAAA,OAAO,EAAEJ,QAAQ,CAACG,IADN;AAEZN,UAAAA,aAAa,EAAE;AAFH,SAAd;AAID,OARH,EASGQ,KATH,CASUC,KAAD,IAAW;AAChBL,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,KAA1C;AACD,OAXH;AAYD,KA/Ba;;AAAA,SAiCdC,OAjCc,GAiCJ,MAAM;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAnCa;;AAEZ,SAAKM,KAAL,GAAa;AACXJ,MAAAA,OAAO,EAAE,IADE;AAEXP,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AA+BDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAc,KAAKI,KAAzB;AACA,wBACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,SAAS,EAAC,WAAxB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAE,KAAKpB;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEgB,OAAxB;AAAiC,UAAA,SAAS,EAAE,KAAKG,OAAjD;AAA0D,UAAA,MAAM,EAAE,KAAKC,KAAL,CAAWX;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAe,QAAA,SAAS,EAAC,YAAzB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AApD0B;;AAuD7B,eAAeX,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport axios from \"axios\";\nimport SatSetting from \"./SatSetting\";\nimport SatelliteList from \"./SatelliteList\";\nimport WorldMap from \"./WorldMap\";\nimport { NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from \"../constants\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      satInfo: null,\n      isLoadingList: false,\n    };\n  }\n  showNearbySatellite = (setting) => {\n    this.fetchSatellite(setting);\n  };\n\n  fetchSatellite = (setting) => {\n    const { latitude, longitude, elevation, altitude } = setting;\n    const url = `/api/${NEARBY_SATELLITE}/${latitude}/${longitude}/${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n\n    this.setState({\n      isLoadingList: true,\n    });\n\n    axios\n      .get(url)\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false,\n        });\n      })\n      .catch((error) => {\n        console.log(\"err in fetch satellite -> \", error);\n      });\n  };\n\n  showMap = () => {\n    console.log(\"show on the map\");\n  };\n\n  render() {\n    const { satInfo } = this.state;\n    return (\n      <Row className=\"main\">\n        <Col span={8} className=\"left-side\">\n          <SatSetting onShow={this.showNearbySatellite} />\n          <SatelliteList satInfo={satInfo} onShowMap={this.showMap} isLoad={this.state.isLoadingList}\n />\n        </Col>\n        <Col span={16} className=\"right-side\">\n          <WorldMap />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}