{"ast":null,"code":"var _jsxFileName = \"/Users/liaihu/project/starlink/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport axios from \"axios\";\nimport { NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from \"../constants\";\nimport SatSetting from \"./SatSetting\";\nimport SatelliteList from \"./SatelliteList\";\nimport WorldMap from \"./WorldMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.showMap = selected => {\n      this.setState(preState => ({ ...preState,\n        satList: [...selected]\n      }));\n    };\n\n    this.showNearbySatellite = setting => {\n      this.setState({\n        isLoadingList: true,\n        setting: setting\n      });\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        latitude,\n        longitude,\n        elevation,\n        altitude\n      } = setting;\n      const url = `/${NEARBY_SATELLITE}/${latitude}/${longitude}/${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        isLoadingList: true\n      });\n      axios.get(url).then(response => {\n        console.log(response.data);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false\n        });\n      }).catch(error => {\n        console.log(\"err in fetch satellite -> \", error);\n      });\n    };\n\n    this.state = {\n      satInfo: null,\n      satList: null,\n      setting: null,\n      isLoadingList: false\n    };\n  }\n\n  render() {\n    const {\n      isLoadingList,\n      satInfo,\n      satList,\n      setting\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        className: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(SatSetting, {\n          onShow: this.showNearbySatellite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SatelliteList, {\n          isLoad: isLoadingList,\n          satInfo: satInfo,\n          onShowMap: this.showMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 16,\n        className: \"right-side\",\n        children: /*#__PURE__*/_jsxDEV(WorldMap, {\n          satData: satList,\n          observerData: setting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/liaihu/project/starlink/src/components/Main.js"],"names":["React","Component","Row","Col","axios","NEARBY_SATELLITE","SAT_API_KEY","STARLINK_CATEGORY","SatSetting","SatelliteList","WorldMap","Main","constructor","showMap","selected","setState","preState","satList","showNearbySatellite","setting","isLoadingList","fetchSatellite","latitude","longitude","elevation","altitude","url","get","then","response","console","log","data","satInfo","catch","error","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport axios from \"axios\";\nimport { NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from \"../constants\";\nimport SatSetting from \"./SatSetting\";\nimport SatelliteList from \"./SatelliteList\";\nimport WorldMap from \"./WorldMap\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      satInfo: null,\n      satList: null,\n      setting: null,\n      isLoadingList: false,\n    };\n  }\n  render() {\n    const { isLoadingList, satInfo, satList, setting } = this.state;\n    return (\n      <Row className=\"main\">\n        <Col span={8} className=\"left-side\">\n          <SatSetting onShow={this.showNearbySatellite} />\n          <SatelliteList\n            isLoad={isLoadingList}\n            satInfo={satInfo}\n            onShowMap={this.showMap}\n          />\n        </Col>\n        <Col span={16} className=\"right-side\">\n          <WorldMap satData={satList} observerData={setting} />\n        </Col>\n      </Row>\n    );\n  }\n\n  showMap = (selected) => {\n    this.setState((preState) => ({\n      ...preState,\n      satList: [...selected],\n    }));\n  };\n\n  showNearbySatellite = (setting) => {\n    this.setState({\n      isLoadingList: true,\n      setting: setting,\n    });\n    this.fetchSatellite(setting);\n  };\n\n  fetchSatellite = (setting) => {\n    const { latitude, longitude, elevation, altitude } = setting;\n    const url = `/${NEARBY_SATELLITE}/${latitude}/${longitude}/${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n\n    this.setState({\n      isLoadingList: true,\n    });\n\n    axios\n      .get(url)\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false,\n        });\n      })\n      .catch((error) => {\n        console.log(\"err in fetch satellite -> \", error);\n      });\n  };\n}\nexport default Main;"]},"metadata":{},"sourceType":"module"}